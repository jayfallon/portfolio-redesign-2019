{"ast":null,"code":"var _jsxFileName = \"/Users/jayfallon/Development/portfolio-redesign/portfolio-redesign-2019/pages/index.js\";\nimport React from \"react\";\nimport PageTitle from \"../components/PageTitle\";\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  return React.createElement(React.Fragment, null, React.createElement(PageTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Hello, world.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Next.js PWA Boilerplate starts your progressive web app off with a perfect Google Lighthouse score. To see this in action, open this website with Chrome, go to the \\u201CAudits\\u201D tab in dev tools, and click \\u201CRun audit\\u201D.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Check out the\", \" \", React.createElement(\"a\", {\n    href: \"https://github.com/pingboard/next-pwa-boilerplate\",\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"source code\"), \" \", \"and a more full\", \" \", React.createElement(\"a\", {\n    href: \"https://nextter.now.sh\",\n    rel: \"noopener noreferrer\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"example\"), \" \", \"for details.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Also, here is a list of lorem ipsum fetched from an API to prove how performant this app still is while using dynamic data sources:\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, posts.map(function (_ref2) {\n    var id = _ref2.id,\n        title = _ref2.title;\n    return React.createElement(\"li\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, title);\n  })));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/jayfallon/Development/portfolio-redesign/portfolio-redesign-2019/pages/index.js"],"names":["PageTitle","Index","posts","map","id","title"],"mappings":";;AACA,OAAOA,SAAP,MAAsB,yBAAtB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACZ,0CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iPAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgB,GADhB,EAEE;AACE,IAAA,IAAI,EAAC,mDADP;AAEE,IAAA,GAAG,EAAC,qBAFN;AAGE,IAAA,MAAM,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAQO,GARP,qBASkB,GATlB,EAUE;AACE,IAAA,IAAI,EAAC,wBADP;AAEE,IAAA,GAAG,EAAC,qBAFN;AAGE,IAAA,MAAM,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,EAgBO,GAhBP,iBAPF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2IA1BF,EA8BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,KAAP,SAAOA,KAAP;AAAA,WACT;AAAI,MAAA,GAAG,EAAED,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAcC,KAAd,CADS;AAAA,GAAV,CADH,CA9BF,CADY;AAAA,CAAd;;AAuCA,eAAeJ,KAAf","sourcesContent":["\nimport PageTitle from \"../components/PageTitle\";\n\nconst Index = ({ posts }) => (\n  <>\n    <PageTitle>Hello, world.</PageTitle>\n    <p>\n      Next.js PWA Boilerplate starts your progressive web app off with a perfect\n      Google Lighthouse score. To see this in action, open this website with\n      Chrome, go to the “Audits” tab in dev tools, and click “Run audit”.\n    </p>\n    <p>\n      Check out the{\" \"}\n      <a\n        href=\"https://github.com/pingboard/next-pwa-boilerplate\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        source code\n      </a>{\" \"}\n      and a more full{\" \"}\n      <a\n        href=\"https://nextter.now.sh\"\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        example\n      </a>{\" \"}\n      for details.\n    </p>\n    <p>\n      Also, here is a list of lorem ipsum fetched from an API to prove how\n      performant this app still is while using dynamic data sources:\n    </p>\n    <ul>\n      {posts.map(({ id, title }) => (\n        <li key={id}>{title}</li>\n      ))}\n    </ul>\n  </>\n);\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}